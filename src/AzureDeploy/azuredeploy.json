{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "webAppName": {
            "type": "string",
            "metadata": {
                "description": "The name of the web app that you wish to create."
            }
        },
        "customHostname": {
            "type": "string",
            "metadata": {
                "description": "The custom hostname that you wish to add."
            }
        },
        "existingKeyVaultId": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Existing Key Vault resource Id for the SSL certificate, leave this blank if not enabling SSL"
            }
        },
        "existingKeyVaultSecretName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Key Vault Secret that contains a PFX certificate, leave this blank if not enabling SSL"
            }
        },
        "alertEmail": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Email address to send alerts to"
            }
        }
    },
    "variables": {
        "appServicePlanName": "[concat(parameters('webAppName'),'-asp-', uniquestring(resourceGroup().id))]",
        "certificateName": "[concat(parameters('webAppName'),'-cert')]",
        "enableSSL": "[not(empty(parameters('existingKeyVaultId')))]",
        "wwwcustomHostname": "[concat('www.',parameters('customHostname'))]"

    },
    "resources": [
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2023-12-01",
            "name": "[variables('appServicePlanName')]",
            "location": "[parameters('location')]",
            "properties": {
                "name": "[variables('appServicePlanName')]"
            },
            "sku": {
                "name": "P0v3",
                "tier": "Premium0V3",
                "size": "P0v3",
                "family": "Pv3",
                "capacity": "1"
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2019-08-01",
            "name": "[parameters('webAppName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverFarms', variables('appServicePlanName'))]"
            ],
            "properties": {
                "name": "[parameters('webAppName')]",
                "serverFarmId": "[resourceId('Microsoft.Web/serverFarms', variables('appServicePlanName'))]",
                "httpsOnly": true,
                "clientAffinityEnabled": false
            }
        },
        {
            "type": "Microsoft.Web/sites/config",
            "name": "[concat(parameters('webAppName'), '/web')]",
            "apiVersion": "2019-08-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('webAppName'))]"
            ],
            "properties": {
                "minTlsVersion": "1.2"
            }
        },
        {
            "condition": "[variables('enableSSL')]",
            "type": "Microsoft.Web/certificates",
            "apiVersion": "2019-08-01",
            "name": "[variables('certificateName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('webAppName'))]"
            ],
            "properties": {
                "keyVaultId": "[parameters('existingKeyVaultId')]",
                "keyVaultSecretName": "[parameters('existingKeyVaultSecretName')]",
                "serverFarmId": "[resourceId('Microsoft.Web/serverFarms', variables('appServicePlanName'))]"
            }
        },
        {
            "type": "Microsoft.Web/sites/hostnameBindings",
            "name": "[concat(parameters('webAppName'), '/', parameters('customHostname'))]",
            "apiVersion": "2019-08-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/certificates', variables('certificateName'))]"
            ],
            "properties": {
                "sslState": "[if(variables('enableSSL'), 'SniEnabled', json('null'))]",
                "thumbprint": "[if(variables('enableSSL'), reference(resourceId('Microsoft.Web/certificates', variables('certificateName'))).Thumbprint, json('null'))]"
            }
        },
        {
            "type": "Microsoft.Web/sites/hostnameBindings",
            "name": "[concat(parameters('webAppName'), '/', variables('wwwcustomHostname'))]",
            "apiVersion": "2019-08-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/certificates', variables('certificateName'))]",
                "[resourceId('Microsoft.Web/sites/hostnameBindings', parameters('webAppName'), parameters('customHostname'))]"
                
            ],
            "properties": {
                "sslState": "[if(variables('enableSSL'), 'SniEnabled', json('null'))]",
                "thumbprint": "[if(variables('enableSSL'), reference(resourceId('Microsoft.Web/certificates', variables('certificateName'))).Thumbprint, json('null'))]"
            }
        },
        {
            "type": "microsoft.insights/actionGroups",
            "apiVersion": "2019-06-01",
            "name": "Email",
            "location": "Global",
            "properties": {
                "groupShortName": "Email",
                "enabled": true,
                "emailReceivers": [
                    {
                        "name": "Email Monitoring_-EmailAction-",
                        "emailAddress": "[parameters('alertEmail')]",
                        "useCommonAlertSchema": false
                    }
                ]
            }
        },
        {
            "type": "microsoft.insights/metricAlerts",
            "apiVersion": "2018-03-01",
            "name": "HTTP Server Errors",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('webAppName'))]",
                "[resourceId('microsoft.insights/actionGroups', 'Email')]"
            ],
            "properties": {
                "severity": 1,
                "enabled": true,
                "scopes": [
                    "[resourceId('Microsoft.Web/sites', parameters('webAppName'))]"
                ],
                "evaluationFrequency": "PT1M",
                "windowSize": "PT5M",
                "criteria": {
                    "allOf": [
                        {
                            "threshold": 1,
                            "name": "Metric1",
                            "metricNamespace": "Microsoft.Web/sites",
                            "metricName": "Http5xx",
                            "operator": "GreaterThan",
                            "timeAggregation": "Total",
                            "criterionType": "StaticThresholdCriterion"
                        }
                    ],
                    "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                },
                "autoMitigate": true,
                "targetResourceType": "Microsoft.Web/sites",
                "actions": [
                    {
                        "actionGroupId": "[resourceId('microsoft.insights/actionGroups', 'Email')]"
                    }
                ]
            }
        }
    ]
}
