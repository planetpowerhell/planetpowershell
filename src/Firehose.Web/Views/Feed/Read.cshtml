@using BlogMonster.Extensions
@using Firehose.Web.Infrastructure
@using Firehose.Web.Extensions
@using ThirdDrawer.Extensions.ClassExtensionMethods

@model System.ServiceModel.Syndication.SyndicationFeed

@{
    Layout = "~/Views/Shared/_ContainerLayout.cshtml";
}

@foreach (var item in Model.Items)
{
    var author = item.Authors.FirstOrDefault();
    var authorName = author.Coalesce(a => a.Name, string.Empty);
    var authorEmail = author.Coalesce(a => a.Email, string.Empty);
    var link = item.Links.FirstOrDefault().Coalesce(l => l.Uri.ToString(), string.Empty);
    var html = item.Content.Coalesce(c => c.ToHtml(),
                                      item.Summary.Coalesce(c => c.ToHtml(), string.Empty)
        );

    <div class="syndicationItem">
        <h1 class="syndicationItemTitle"><a href="@link" target="_blank">@Html.Raw(item.Title.Text)</a></h1>
        <h2 class="syndicationItemDate">@item.PublishDate.ToString("dd MMMM yyyy")</h2>
        @*<img class="syndicationItemPhoto" src="@authorEmail.GravatarImage()" alt="@authorName avatar" />*@
        <h2 class="syndicationItemByLine">@authorName</h2>
        @if (!string.IsNullOrWhiteSpace(@authorEmail))
        {
            <a href="mailto:@authorEmail">@authorEmail</a>
        }
        <br style="clear: both" />
        <hr />
        <div class="syndicationItemContent">
            @Html.Raw(html)
        </div>
        <div class="syndicationItemFooter">
            <hr />
            <p>View the original of this post at <a href="@link">@link</a></p>
            <hr />
        </div>
    </div>
}
